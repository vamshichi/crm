generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Manager {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String     @unique
  password     String
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId String     @db.ObjectId
  createdAt    DateTime   @default(now())
}


model Employee {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String     @unique
  password     String
  role         String
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId String     @db.ObjectId
  leads        Lead[]
  createdAt    DateTime   @default(now())
}

model Lead {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String?
  company      String
  phone        String?
  city         String
  designaction String?
  message      String?
  status       LeadStatus
  soldAmount   Float?     @default(0)  // Added this field
  callBackTime DateTime?
  employee     Employee   @relation(fields: [employeeId], references: [id])
  employeeId   String     @db.ObjectId
  createdAt    DateTime   @default(now())
}


model Department {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String     @unique
  employees Employee[]
  managers  Manager[]
  target    Target?
}

model Target {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId String     @unique @db.ObjectId
  amount       Float
  startDate    DateTime
  endDate      DateTime
  createdAt    DateTime   @default(now())
}

enum LeadStatus {
  HOT
  COLD
  WARM
  SOLD
  CALL_BACK
}